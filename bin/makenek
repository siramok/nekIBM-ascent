#!/bin/bash
#-------------------------------------------------------------------------------
# Nek5000 config file
#-------------------------------------------------------------------------------
source /grand/insitu/polaris/sourceme

# source path 
SOURCE_ROOT=/grand/insitu/polaris/nekIBM-ascent

# Fortran/C compiler
FC="ftn"
CC="cc"
CXX="CC"

# pre-processor list (set to "?" to get a list of available symbols)
PPLIST="LPM"

#-------------------------------------------------------------------------------
# WHAT FOLLOWS ARE OPTIONAL SETTINGS
#-------------------------------------------------------------------------------

# Ascent cmake directory
ASCENT=1
ASCENT_DIR="/grand/insitu/polaris/ascent/scripts/build_ascent/install/ascent-develop/lib/cmake/ascent"

# optional compiler flags
FFLAGS="-std=legacy -mcmodel=medium -fallow-argument-mismatch"
# CFLAGS=""

# optional linking flags
#USR_LFLAGS+=" -L/usr/lib -lfoo"

# auxilliary files to compile
# NOTE: source files have to located in the same directory as makenek
#       a makefile_usr.inc has to be provided containing the build rules 
#USR="foo.o"

# MPI (default 1) 
#MPI=0

# profiling (default 1)
#PROFILING=0fi

# VisIt in situ (default 0)
#VISIT=1
#  Note: you can override the lib and include paths. VISIT_LIB and VISIT_INC
#  If VISIT_STOP is set the simulation will stop after first step and wait
#  for VisIt to connect.
#VISIT_INSTALL="/path/to/visit/current/linux-x86_64/"
#VISIT_STOP=true

###############################################################################
# DONT'T TOUCH WHAT FOLLOWS !!!
###############################################################################
set -e

# assign version tag
mver=17.0.4

# set defaults
: ${SOURCE_ROOT:="/grand/insitu/polaris/nekIBM-ascent"}
: ${FC:="mpif77"}
: ${CC:="mpicc"}
: ${MPI:=1}
: ${PROFILING:=1}
: ${VISIT:=0}
: ${ASCENT:=0}
: ${PPLIST:=""}

# overwrite source path with optional 2nd argument
if [ -d $2 ] && [ $# -eq 2 ]; then
  SOURCE_ROOT="$2"
  echo "change source code directory to: ", $SOURCE_ROOT
fi

# create makefile
source $SOURCE_ROOT/core/makenek.inc

# compile 3rd_party code
make_3rd_party 2>&1 | tee -a compiler.out

# compile nek
make -j8 -f makefile 2>&1 | tee -a compiler.out

# create a better default session file
if [ ! -e "SESSION.NAME" ]; then
  echo $1 >> SESSION.NAME
  echo $PWD >> SESSION.NAME
fi

# copy Ascent runtime files into the cwd
cp -R $SOURCE_ROOT/3rd_party/nek_ascent/runtime_files/* .

# create a runfile to help with running on polaris
if [ ! -e "run_polaris.sh" ]; then
  echo '#!/bin/bash' >> run_polaris.sh
  echo 'source /grand/insitu/polaris/sourceme' >> run_polaris.sh
  echo './start_jupyter.sh' >> run_polaris.sh
  echo 'NODES=`wc -l < $PBS_NODEFILE`' >> run_polaris.sh
  echo 'RANKS_PER_NODE=32' >> run_polaris.sh
  echo 'TOTAL_RANKS=$(( $NODES * $RANKS_PER_NODE ))' >> run_polaris.sh
  echo 'mpiexec -n $TOTAL_RANKS -ppn $RANKS_PER_NODE ./nek5000' >> run_polaris.sh
  chmod +x run_polaris.sh
fi

exit 0
