#!/bin/bash
#-------------------------------------------------------------------------------
# Nek5000 config file
#-------------------------------------------------------------------------------

# Needed for theta-cpu
export CRAYPE_LINK_TYPE=dynamic

# source path 
SOURCE_ROOT=$HOME/theta-cpu/nekIBM-ascent

# Fortran/C compiler
FC="ftn"
CC="cc"

# pre-processor list (set to "?" to get a list of available symbols)
#PPLIST="?"

#-------------------------------------------------------------------------------
# WHAT FOLLOWS ARE OPTIONAL SETTINGS
#-------------------------------------------------------------------------------

# Ascent cmake directory
ASCENT=1
ASCENT_DIR="/grand/insitu/theta-cpu/ascent/scripts/build_ascent/install/ascent-develop/lib/cmake/ascent"

# optional compiler flags
FFLAGS="-dynamic -xMIC-AVX512 -O2 -align array64byte -fma -finline-functions -shared-intel"
CFLAGS="-dynamic -xMIC-AVX512 -O2 -shared-intel"

# optional linking flags
#USR_LFLAGS+=" -L/usr/lib -lfoo"

# auxilliary files to compile
# NOTE: source files have to located in the same directory as makenek
#       a makefile_usr.inc has to be provided containing the build rules 
#USR="foo.o"

# MPI (default 1) 
#MPI=0

# profiling (default 1)
#PROFILING=0

# VisIt in situ (default 0)
#VISIT=1
#  Note: you can override the lib and include paths. VISIT_LIB and VISIT_INC
#  If VISIT_STOP is set the simulation will stop after first step and wait
#  for VisIt to connect.
#VISIT_INSTALL="/path/to/visit/current/linux-x86_64/"
#VISIT_STOP=true

###############################################################################
# DONT'T TOUCH WHAT FOLLOWS !!!
###############################################################################
set -e

export CRAYPE_LINK_TYPE=dynamic
module load cmake/3.20.4
module load cray-python/3.9.4.1
source /grand/insitu/theta-cpu/ascent/scripts/build_ascent/env/bin/activate

# assign version tag
mver=17.0.4

# set defaults
: ${SOURCE_ROOT:="$HOME/theta-cpu/nekIBM-ascent"}
: ${FC:="mpif77"}
: ${CC:="mpicc"}
: ${MPI:=1}
: ${PROFILING:=1}
: ${VISIT:=0}
: ${ASCENT:=0}
: ${PPLIST:=""}

# overwrite source path with optional 2nd argument
if [ -d $2 ] && [ $# -eq 2 ]; then
  SOURCE_ROOT="$2"
  echo "change source code directory to: ", $SOURCE_ROOT
fi

# create makefile
source $SOURCE_ROOT/core/makenek.inc

# compile 3rd_party code
make_3rd_party 2>&1 | tee -a compiler.out

# compile nek
make -j4 -f makefile 2>&1 | tee -a compiler.out

# create a better default session file
if [ ! -e "SESSION.NAME" ]; then
  echo $1 >> SESSION.NAME
  echo $PWD >> SESSION.NAME
fi

# copy Ascent runtime files into the cwd
cp -R $SOURCE_ROOT/3rd_party/nek_ascent/runtime_files/* .

# create a runfile to help with running on theta-cpu
if [ ! -e "run_theta.sh" ]; then
  echo '#!/bin/bash' >> run_theta.sh
  echo 'export CRAYPE_LINK_TYPE=dynamic' >> run_theta.sh
  echo 'module load cray-python/3.9.4.1' >> run_theta.sh
  echo 'source /grand/insitu/theta-cpu/ascent/scripts/build_ascent/env/bin/activate' >> run_theta.sh
  echo 'module swap PrgEnv-intel PrgEnv-cray' >> run_theta.sh
  echo 'module swap PrgEnv-cray PrgEnv-intel' >> run_theta.sh
  echo 'RANKS_PER_NODE=2' >> run_theta.sh
  echo 'TOTAL_RANKS=$(( $COBALT_JOBSIZE * $RANKS_PER_NODE ))' >> run_theta.sh
  echo 'aprun -n $TOTAL_RANKS -N $RANKS_PER_NODE ./nek5000' >> run_theta.sh
  chmod +x run_theta.sh
fi

exit 0
